import pygame
from icecream import ic


# ic.disable()


def game(surface: pygame.Surface, clock: pygame.time.Clock, fps: int) -> int:  # не забудь вернуть счет
    w, h = ic(surface.get_rect()[2:])  # вот пример как можно из surface достать размеры экрана
    # Icecream - удобный дебаггер. Ф-ция ic выведет в stdout инфу о том, что ей передали, и вернет эти значения:
    # т.е. в w и h запишутся нужные величины, а ты их сможешь увидеть. Если дебаг больше не нужен, раскомментируй строку
    # в начале (вредно бегать по файлу и что-то удалять)
    # P.S. Есть особенность: данные, пропущенные через ic(), теряют подсказки, т.к. IDE не понимает что вернет ic().

    dtime = 1  # тоже очень важная штука: на разных компах разное кол-во fps. В анимациях, движениях и т.д. используй
    # привязку к времени, а не к кадрам. dtime у тебя всегда будет равен времени, за которое отрисовался предыдущий
    # кадр, в миллисекундах и всегда типа int. Читай строку ниже.
    while True:  # обращайся за референсами к start_screen
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                return -1  # еще один бонус работы в функции: можно в любой момент из нее выйти через return

        pygame.display.flip()
        dtime = clock.tick(fps)


if __name__ == '__main__':  # очень удобная конструкция, если хочешь протестить отдельный элемент, именно поэтому мы
    # разбивали все на несколько файлов
    pygame.init()
    size = pygame.display.get_desktop_sizes()[0]
    size = (size[0] // 2, size[1] // 2)  # Вот тут можно регулировать размер экрана: на разных компах абсолютные
    # значения ширины и высоты экрана разные, поэтому используй относительные размеры, отталкиваясь от переданных в
    # функцию. Обязательно потести на разных значениях
    surfaced = pygame.display.set_mode(size)
    clocc = pygame.time.Clock()

    game(surfaced, clocc, 60)  # Твоя функция должна работать только с тем, что ей дали, если подтягивать что-то извне -
    # сразу начинается жоска головна боль. Не делой так

    pygame.quit()
